# Generated by: Neurodocker version 0.7.0+0.gdc97516.dirty
# Timestamp: 2021/08/25 16:27:58 UTC
# 
# Thank you for using Neurodocker. If you discover any issues
# or ways to improve this software, please submit an issue or
# pull request on our GitHub repository:
# 
#     https://github.com/ReproNim/neurodocker

Bootstrap: docker
From: ubuntu:20.04

%post
su - root

export ND_ENTRYPOINT="/neurodocker/startup.sh"
apt-get update -qq
apt-get install -y -q --no-install-recommends \
    apt-utils \
    bzip2 \
    ca-certificates \
    wget \
    curl \
    locales \
    unzip
apt-get clean
rm -rf /var/lib/apt/lists/*
sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen
dpkg-reconfigure --frontend=noninteractive locales
update-locale LANG="en_US.UTF-8"
chmod 777 /opt && chmod a+s /opt
mkdir -p /neurodocker
if [ ! -f "$ND_ENTRYPOINT" ]; then
  echo '#!/usr/bin/env bash' >> "$ND_ENTRYPOINT"
  echo 'set -e' >> "$ND_ENTRYPOINT"
  echo 'export USER="${USER:=`whoami`}"' >> "$ND_ENTRYPOINT"
  echo 'if [ -n "$1" ]; then "$@"; else /usr/bin/env bash; fi' >> "$ND_ENTRYPOINT";
fi
chmod -R 777 /neurodocker && chmod a+s /neurodocker

echo "Downloading ANTs ..."
mkdir -p /opt/ants-2.3.4
wget https://dl.dropbox.com/s/1xfhydsf4t4qoxg/ants-Linux-centos6_x86_64-v2.3.4.tar.gz
tar -xzvf ants-Linux-centos6_x86_64-v2.3.4.tar.gz -C /opt/ants-2.3.4  --strip-components 1 
rm ants-Linux-centos6_x86_64-v2.3.4.tar.gz

export TMPDIR="$(mktemp -d)"
apt-get update -qq
apt-get install -y -q --no-install-recommends \
    xorg \
    libncurses5 \
    libxext6 \
    libxmu6 \
    libxpm-dev \
    libxt6
apt-get clean
rm -rf /var/lib/apt/lists/*
echo "Downloading MATLAB Compiler Runtime ..."
mkdir /opt/matlabmcr-2019b
curl -fsSL --retry 5 -o "$TMPDIR/mcr.zip" https://ssd.mathworks.com/supportfiles/downloads/R2019b/Release/3/deployment_files/installer/complete/glnxa64/MATLAB_Runtime_R2019b_Update_3_glnxa64.zip
unzip -q "$TMPDIR/mcr.zip" -d "$TMPDIR"
$TMPDIR/install -destinationFolder /opt/matlabmcr-2019b -agreeToLicense yes -mode silent
rm -rf "$TMPDIR"
unset TMPDIR
echo "Downloading standalone SPM ..."
curl -fsSL --retry 5 -o /tmp/spm12.zip https://www.fil.ion.ucl.ac.uk/spm/download/restricted/bids/spm12_r7771_Linux_R2019b.zip
unzip -q /tmp/spm12.zip -d /tmp
mkdir -p /opt/spm12-r7771
mv /tmp/spm12/* /opt/spm12-r7771/
chmod -R 777 /opt/spm12-r7771
rm -rf /tmp/spm*
/opt/spm12-r7771/run_spm12.sh /opt/matlabmcr-2019b/v97 quit
sed -i '$iexport SPMMCRCMD=\"/opt/spm12-r7771/run_spm12.sh /opt/matlabmcr-2019b/v97 script\"' $ND_ENTRYPOINT

export PATH="/opt/miniconda-latest/bin:$PATH"
echo "Downloading Miniconda installer ..."
conda_installer="/tmp/miniconda.sh"
curl -fsSL --retry 5 -o "$conda_installer" https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
bash "$conda_installer" -b -p /opt/miniconda-latest
rm -f "$conda_installer"
conda update -yq -nbase conda
conda config --system --prepend channels conda-forge
conda config --system --set auto_update_conda false
conda config --system --set show_channel_urls true
sync && conda clean -y --all && sync
conda install -y -q --name base \
    "python=3.6" \
    "traits"
sync && conda clean -y --all && sync
bash -c "source activate base
  pip install --no-cache-dir  \
      "nipype""
rm -rf ~/.cache/pip/*
sync
sed -i '$isource activate base' $ND_ENTRYPOINT


echo '{
\n  "pkg_manager": "apt",
\n  "instructions": [
\n    [
\n      "base",
\n      "ubuntu:20.04"
\n    ],
\n    [
\n      "user",
\n      "root"
\n    ],
\n    [
\n      "_header",
\n      {
\n        "version": "generic",
\n        "method": "custom"
\n      }
\n    ],
\n    [
\n      "ants",
\n      {
\n        "version": "2.3.4"
\n      }
\n    ],
\n    [
\n      "spm12",
\n      {
\n        "version": "r7771",
\n        "method": "binaries"
\n      }
\n    ],
\n    [
\n      "miniconda",
\n      {
\n        "use_env": "base",
\n        "conda_install": [
\n          "python=3.6",
\n          "traits"
\n        ],
\n        "pip_install": [
\n          "nipype"
\n        ],
\n        "activate": true
\n      }
\n    ]
\n  ]
\n}' > /neurodocker/neurodocker_specs.json

%environment
export LANG="en_US.UTF-8"
export LC_ALL="en_US.UTF-8"
export ND_ENTRYPOINT="/neurodocker/startup.sh"
export ANTSPATH="/opt/ants-2.3.4"
export PATH="/opt/ants-2.3.4:$PATH"
export FORCE_SPMMCR="1"
export SPM_HTML_BROWSER="0"
export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/lib/x86_64-linux-gnu:/opt/matlabmcr-2019b/v97/runtime/glnxa64:/opt/matlabmcr-2019b/v97/bin/glnxa64:/opt/matlabmcr-2019b/v97/sys/os/glnxa64:/opt/matlabmcr-2019b/v97/extern/bin/glnxa64"
export MATLABCMD="/opt/matlabmcr-2019b/v97/toolbox/matlab"
export CONDA_DIR="/opt/miniconda-latest"
export PATH="/opt/miniconda-latest/bin:$PATH"

%runscript
/neurodocker/startup.sh "$@"
